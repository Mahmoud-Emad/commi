name: Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-release:
    needs: create-release
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            binary_ext: ''
          - os: macos-latest
            platform: macos
            binary_ext: ''
          # - os: windows-latest
          #   platform: windows
          #   binary_ext: '.exe'
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        
    - name: Install dependencies
      run: poetry install
        
    - name: Create .env file
      run: |
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" > .env
        
    - name: Prepare dist directory
      run: mkdir -p dist
        
    - name: Build for Linux
      if: matrix.platform == 'linux'
      run: |
        poetry run shiv . \
          --console-script commi \
          --output-file 'dist/commi${{ matrix.binary_ext }}' \
          --python '/usr/bin/env python3' \
          --entry-point 'commi.run:main' \
          --compressed

    - name: Build for macOS
      if: matrix.platform == 'macos'
      run: |
        # Set environment variables for gRPC on macOS
        export GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=1
        export GRPC_PYTHON_BUILD_SYSTEM_ZLIB=1
        
        # Use pre-built wheels for macOS instead of building from source
        poetry run pip uninstall -y grpcio grpcio-tools
        poetry run pip install --only-binary=grpcio grpcio==1.62.0
        
        # Verify the installation
        poetry run python -c "import grpc; print('gRPC successfully imported')"
        
        # Build the binary with the pre-built wheels
        poetry run shiv . \
          --console-script commi \
          --output-file 'dist/commi${{ matrix.binary_ext }}' \
          --python '/usr/bin/env python3' \
          --entry-point 'commi.run:main' \
          --compressed
        
    - name: Upload binary to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/commi${{ matrix.binary_ext }}
        asset_name: commi-${{ matrix.platform }}${{ matrix.binary_ext }}
        asset_content_type: application/octet-stream
